apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.ioeventui.name }}
  annotations:
    downscaler/downtimePeriod: "Mon-Sun 20:57-:21:08 Europe/Paris"
spec:
  replicas: {{ .Values.ioeventui.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.ioeventui.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.ioeventui.name }}
    spec:
      containers:
      - name: {{ .Values.ioeventui.name }}
        image: {{ .Values.ioeventui.image }}
        resources:
          requests:
            memory: "{{ .Values.ioeventui.resources.requests.memory }}"
            cpu: "{{ .Values.ioeventui.resources.requests.cpu }}"
          limits:
            memory: "{{ .Values.ioeventui.resources.limits.memory }}"
            cpu: "{{ .Values.ioeventui.resources.limits.cpu }}"
        ports:
        - containerPort: {{ .Values.ioeventui.containerPort }}
        env:
        - name: COCKPit_API_URL
          value: "{{ .Values.ioeventui.apiUrl }}"
        - name: COCKPit_UI_REGISTRATION
          value: "{{ .Values.ioeventui.uiRegistration }}"
        - name: REACT_APP_ENABLE_SSO
          value: "{{ .Values.ioeventui.enableSSO }}"
        - name: REACT_APP_SSO_URL
          value: "{{ .Values.ioeventui.ssoUrl }}"
        - name: REACT_APP_CLIENT_ID
          value: "{{ .Values.ioeventui.clientId }}"
        - name: REACT_APP_REDIRECT_URI
          value: "{{ .Values.ioeventui.redirectUri }}"
        - name: REACT_APP_RESPONSE_TYPE
          value: "{{ .Values.ioeventui.responseType }}"

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.ioeventuiservice.name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
spec:
  selector:
    app.kubernetes.io/name: {{ .Values.ioeventui.name }}
  ports:
  - protocol: TCP
    port: {{ .Values.ioeventuiservice.port }}
    targetPort: {{ .Values.ioeventuiservice.targetPort }}
  type: {{ .Values.ioeventuiservice.serviceType }}
